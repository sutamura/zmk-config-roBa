#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&trackball {
    automouse-layer = <4>;
    scroll-layers = <5>;

    // arrows {
    //     layers = <3>;
    //     bindings =
    //         <&kp RIGHT_ARROW>,
    //         <&kp LEFT_ARROW>,
    //         <&kp UP_ARROW>,
    //         <&kp DOWN_ARROW>;
    //     tick = <10>;
    //     wait-ms = <5>;
    //     tap-ms = <5>;
    // };
};

/ {
    combos {
        compatible = "zmk,combos";

        CTRL+SHIFT {
            bindings = <&kp LC(LEFT_SHIFT)>;
            key-positions = <1 2>;
        };

        CTRL {
            bindings = <&kp LCTRL>;
            key-positions = <0 1>;
        };

        Sleep {
            bindings = <&kp LG(LS(F14))>;
            key-positions = <0 1 2 3 4>;
        };

        LeftClick {
            bindings = <&mkp MB1>;
            key-positions = <23 24>;
        };

        RightClick {
            bindings = <&mkp MB2>;
            key-positions = <24 25>;
        };

        CtrlX {
            bindings = <&kp LC(X)>;
            key-positions = <4 1>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        holdshift: holdshift {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLDSHIFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            retro-tap;
            tapping-term-ms = <100>;
            flavor = "hold-preferred";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp F                   &kp P    &kp D  &kp L  &kp X                                                           &kp SEMI   &kp U    &kp O     &kp Y      &kp Q
&kp S                   &kp N    &kp T  &kp H  &kp K                        &kp C_MUTE        &kp ESCAPE       &kp COMMA  &kp A    &kp E     &kp I      &kp C
&kp V                   &kp W    &kp G  &kp M  &kp J                        &kp LEFT_GUI      &kp RIGHT_SHIFT  &kp MINUS  &kp DOT  &kp APOS  &kp EQUAL  &kp FSLH
&kp LA(LC(LEFT_SHIFT))  &kp TAB  &kp Z  &kp R  &holdshift LEFT_SHIFT SPACE  &lt 2 ENTER       &lt 1 BACKSPACE  &kp B                                    &kp DELETE
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_DOWN C_VOLUME_UP>;
        };

        num {
            bindings = <
&kp TAB   &kp N7     &kp N8     &kp N9   &kp ASTERISK                            &kp TAB   &kp N7  &kp N8  &kp N9  &kp ASTERISK
&kp BSPC  &kp N4     &kp N5     &kp N6   &kp MINUS     &none          &kp LG(C)  &kp BSPC  &kp N4  &kp N5  &kp N6  &kp MINUS
&none     &kp N1     &kp N2     &kp N3   &kp PLUS      &none          &kp LG(V)  &none     &kp N1  &kp N2  &kp N3  &kp PLUS
&none     &kp SLASH  &kp COMMA  &kp DOT  &kp N0        &kp ENTER      &none      &kp N0                            &kp SLASH
            >;

            sensor-bindings = <&inc_dec_kp PAGE_DOWN PAGE_UP>;
        };

        sp {
            bindings = <
&trans      &trans    &kp UP_ARROW  &kp DOUBLE_QUOTES  &kp LEFT_BRACE                                          &kp RIGHT_BRACE        &kp LCTRL  &kp AMPERSAND  &kp ASTERISK          &kp F12
&bt BT_NXT  &kp LEFT  &kp DOWN      &kp RIGHT          &kp LEFT_PARENTHESIS  &kp C_PLAY       &kp QUESTION     &kp RIGHT_PARENTHESIS  &kp HASH   &kp DOLLAR     &kp PERCENT           &kp F8
&bt BT_PRV  &trans    &trans        &trans             &kp LEFT_BRACKET      &kp AT_SIGN      &kp EXCLAMATION  &kp RIGHT_BRACKET      &kp GRAVE  &kp TILDE      &kp NON_US_BACKSLASH  &kp PIPE
&bt BT_CLR  &trans    &trans        &trans             &trans                &trans           &kp BACKSPACE    &trans                                                                 &trans
            >;

            sensor-bindings = <&inc_dec_kp C_PREVIOUS C_NEXT>;
        };
    };
};

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&trackball {
    automouse-layer = <4>;
    scroll-layers = <5>;

    // arrows {
    //     layers = <3>;
    //     bindings =
    //         <&kp RIGHT_ARROW>,
    //         <&kp LEFT_ARROW>,
    //         <&kp UP_ARROW>,
    //         <&kp DOWN_ARROW>;
    //     tick = <10>;
    //     wait-ms = <5>;
    //     tap-ms = <5>;
    // };
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp F                   &kp P      &kp D  &kp L  &kp X                                  &kp SEMI   &kp U    &kp O     &kp Y      &kp Q
&kp S                   &kp N      &kp T  &kp H  &kp K  &kp SPACE      &kp SPACE        &kp COMMA  &kp A    &kp E     &kp I      &kp C
&kp V                   &kp W      &kp G  &kp M  &kp J  &kp SPACE      &kp SPACE        &kp MINUS  &kp DOT  &kp APOS  &kp EQUAL  &kp FSLH
&kp LA(LC(LEFT_SHIFT))  &kp SPACE  &kp Z  &kp Z  &kp R  &kp SPACE      &lt 1 BACKSPACE  &kp B                                    &kp ENTER
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        num {
            bindings = <
&kp TAB   &kp N7  &kp N8     &kp N9   &kp ASTERISK                        &kp TAB   &kp N7  &kp N8  &kp N9  &kp ASTERISK
&kp BSPC  &kp N4  &kp N5     &kp N6   &kp MINUS     &none          &none  &kp BSPC  &kp N4  &kp N5  &kp N6  &kp MINUS
&none     &kp N1  &kp N2     &kp N3   &kp PLUS      &none          &none  &none     &kp N1  &kp N2  &kp N3  &kp PLUS
&none     &kp N0  &kp COMMA  &kp DOT  &kp SLASH     &kp ENTER      &none  &kp N0                            &kp SLASH
            >;
        };

        sp {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };
    };
};
